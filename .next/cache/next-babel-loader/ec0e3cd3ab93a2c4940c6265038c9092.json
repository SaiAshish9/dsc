{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"E:\\\\projectFolders\\\\nextJsProjects\\\\dsc\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport App from \"next/app\";\nimport firebaseConfig from \"../src/config/firebaseConfig\";\nimport { UserContext } from \"../src/contexts/UserContext\"; //toast\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState(),\n      user = _useState[0],\n      _setUser = _useState[1];\n\n  return __jsx(React.Fragment, null, __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(UserContext.Provider, {\n    value: {\n      user: user,\n      setUser: function setUser(email, uid) {\n        return _setUser(_objectSpread(_objectSpread({}, user), {}, {\n          email: email,\n          uid: uid\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }))));\n}\n\n_s(MyApp, \"kGLk6m4BT90iK1d91zRYm0C2usk=\");\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var appProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return App.getInitialProps(appContext);\n\n          case 2:\n            appProps = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread({}, appProps));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["E:/projectFolders/nextJsProjects/dsc/pages/_app.js"],"names":["React","createContext","useState","firebase","App","firebaseConfig","UserContext","ToastContainer","apps","length","initializeApp","MyApp","Component","pageProps","user","setUser","email","uid","getInitialProps","appContext","appProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,GAAP,MAAgB,UAAhB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,SAASC,WAAT,QAA4B,6BAA5B,C,CAEA;;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,2CAAP;;AAEA,IAAI,CAACJ,QAAQ,CAACK,IAAT,CAAcC,MAAnB,EAA2B;AACzBN,EAAAA,QAAQ,CAACO,aAAT,CAAuBL,cAAvB;AACD;;AAED,SAASM,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBACfX,QAAQ,EADO;AAAA,MAChCY,IADgC;AAAA,MAC1BC,QAD0B;;AAEvC,SACE,4BACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,IAAI,EAAJA,IADK;AAELC,MAAAA,OAAO,EAAE,iBAACC,KAAD,EAAQC,GAAR;AAAA,eAAgBF,QAAO,iCAAMD,IAAN;AAAYE,UAAAA,KAAK,EAACA,KAAlB;AAAyBC,UAAAA,GAAG,EAACA;AAA7B,WAAvB;AAAA;AAFJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,SAAD,eAAeJ,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANF,CAFF,CADF;AAaD;;GAfQF,K;;KAAAA,K;;AAiBTA,KAAK,CAACO,eAAN;AAAA,uEAAwB,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAECf,GAAG,CAACc,eAAJ,CAAoBC,UAApB,CAFD;;AAAA;AAEhBC,YAAAA,QAFgB;AAAA,+DAIVA,QAJU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAeT,KAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport App from \"next/app\";\r\n\r\nimport firebaseConfig from \"../src/config/firebaseConfig\";\r\n\r\nimport { UserContext } from \"../src/contexts/UserContext\";\r\n\r\n//toast\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  const [user, setUser] = useState();\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <UserContext.Provider\r\n        value={{\r\n          user,\r\n          setUser: (email, uid) => setUser({ ...user, email:email, uid:uid }),\r\n        }}\r\n      >\r\n        <Component {...pageProps} />\r\n      </UserContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nMyApp.getInitialProps = async (appContext) => {\r\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n  const appProps = await App.getInitialProps(appContext);\r\n\r\n  return { ...appProps };\r\n};\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}